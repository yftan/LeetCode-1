package Microsoft.q468_验证IP地址;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Solution {

    public static void main(String[] args) {
        System.out.println(new Solution().validIPAddress
    }

    Pattern p1 = Pattern.compile("((([1-9]?|1\\d|2[0-4])\\d|25[0-5])\\.){3}(([1-9]?|1\\d|2[0-4])\\d|25[0-5])");
    Pattern p2 = Pattern.compile("(?i)([0-9a-f]{1,4}:){7}([0-9a-f]){1,4}");

    // 方法一
    public String validIPAddress(String IP) {

        Matcher m1 = p1.matcher(IP);
        if (m1.matches()) {
            return "IPv4";
        }

        Matcher m2 = p2.matcher(IP);
        if (m2.matches()) {
            return "IPv6";
        }

        return "Neither";
    }

    // 方法二
    public String validIPAddress1(String IP) {
        if (IP.equals("")) return "Neither";
        if(isIpv4(IP)){
            return "IPv4";
        } else if (isIpv6(IP)){
            return "IPv6";
        } else {
            return "Neither";
        }

    }

    public boolean isIpv4(String IP) {
        if(IP.charAt(0)=='.') return false;
        if(IP.charAt(IP.length()-1)=='.') return false;
        String[] items = IP.split("\\.");
        if(items.length !=4) return false;
        for(String item: items) {
            if(!isIPv4Item(item)){
                return false;
            }
        }
        return true;
    }

    public boolean isIpv6(String IP) {
        if(IP.charAt(0)==':') return false;
        if(IP.charAt(IP.length()-1)==':') return false;
        String[] items = IP.split(":");
        if(items.length !=8) return false;
        for(String item: items) {
            if(!isIPv6Item(item)){
                return false;
            }
        }
        return true;
    }

    public boolean isIPv4Item(String item){
        if (item.equals("")) return false;
        // 第一位不允许为0
        if(item.length() > 1 && item.charAt(0) == '0') return false;
        if( item.length() > 3) return false;
        for(char c: item.toCharArray()){
            if(!isDigit(c)) {
                return false;
            }
        }
        int val = Integer.valueOf(item);
        if(val > 255 || val <0) return false;
        return true;
    }

    public boolean isIPv6Item(String item){
        if (item.equals("")) return false;
        if(item.length() > 4 || item.length() <1) return false;
        for(char c: item.toCharArray()){
            if(!isHex(c)) {
                return false;
            }
        }
        return true;
    }

    // 是否是10进制数字
    public boolean isDigit(char c){
        if(c >= '0' && c<= '9') return true;
        return false;
    }

    // 是否是16进制的数字
    public boolean isHex(char c) {
        if((c >= 'a' && c <='f') || (c>='A' && c<='F') || (c >= '0' && c<= '9') ){
            return true;
        }
        return false;
    }
}
